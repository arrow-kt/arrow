name: "Publish all libs, Arrow-stack and Docs"

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    branches: [ main ]
    inputs:
      version:
        description: 'Version'
        required: true
        type: string

env:
  BASEDIR: ${{github.workspace}}/arrow-libs
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.kotlin.dsl.internal.io.timeout=120000 -Dorg.gradle.jvmargs="-Xmx5g -XX:+HeapDumpOnOutOfMemoryError -XX:+UseParallelGC -XX:MaxMetaspaceSize=1g -Dfile.encoding=UTF-8"
  OSS_USER: '${{ secrets.OSS_USER }}'
  OSS_TOKEN: '${{ secrets.OSS_TOKEN }}'
  OSS_STAGING_PROFILE_ID: '${{ secrets.OSS_STAGING_PROFILE_ID }}'
  SIGNING_KEY_NAME: '${{ secrets.SIGNING_KEY_NAME }}'
  SIGNING_KEY_ID: '${{ secrets.SIGNING_KEY_ID }}'
  SIGNING_KEY_PASSPHRASE: '${{ secrets.SIGNING_KEY_PASSPHRASE }}'
  SIGNING_KEY: '${{ secrets.SIGNING_KEY }}'

jobs:
  publish:
    timeout-minutes: 90
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/arrow-2' }}

      - name: Assemble
        run: ./gradlew assemble -Pversion=${{ inputs.version }} -Penable_wasm=true

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: 'reports-${{ matrix.os }}'
          path: '**/build/reports/**'

      - name: Publish next major SNAPSHOT version
        run: ./gradlew -Pversion=${{ inputs.version }} publish
