name: "pull_request"

on: pull_request

env:
  BASEDIR: ${{github.workspace}}/arrow-libs
  JAVA_OPTS: -Xms1g -Xmx3g
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.configureondemand=true -Dorg.gradle.jvmargs=-Xmx3g -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"

jobs:
  code_formatter_dokka_ank:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/yarn
            ~/.gradle/nodejs
            ~/.konan
          key: misc-step-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            misc-step-gradle-

      - name: "Set env"
        run: |
          echo "$JAVA_HOME_8_X64/bin" >> $GITHUB_PATH
          echo "JAVA_HOME=$JAVA_HOME_8_X64" >> $GITHUB_ENV

#      - name: "Run code formatter"
#        run: ./gradlew spotlessCheck

      - name: "Create API doc"
        run: ./gradlew dokkaGfm

#      - name: "Validate documentation"
#        run: ./gradlew arrow-site:runAnk

      - name: Stop Gradle daemons
        run: ./gradlew --stop

  linux_jvm_and_js:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: linux-step-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            linux-step-gradle-

      - name: Build
        run: ./gradlew linuxX64Test jvmTest jsTest

      - name: "Prepare test reports"
        if: ${{ always() }}
        run: |
          mkdir test-reports
          for report in `ls -d arrow-libs/**/**/build/reports/tests`; do
            module=$(echo $report | cut -d/ -f3)
            cp -r $report test-reports/$module
          done

      - name: "Make test reports available to download"
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: test-reports

      - name: Stop Gradle daemons
        run: ./gradlew --stop

  apple:
    runs-on: macos-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: mac-step-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            mac-step-gradle-

      - name: Build
        run: ./gradlew iosX64Test macosX64Test tvosX64Test watchosX64Test

      - name: "Prepare test reports"
        if: ${{ always() }}
        run: |
          mkdir test-reports
          for report in `ls -d arrow-libs/**/**/build/reports/tests`; do
            module=$(echo $report | cut -d/ -f3)
            cp -r $report test-reports/$module
          done

      - name: "Make test reports available to download"
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: test-reports

      - name: Stop Gradle daemons
        run: ./gradlew --stop

  windows:
    runs-on: windows-latest

    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build
        run: ./gradlew mingwX64Test

      - name: Stop Gradle daemons
        run: ./gradlew --stop

  update_api:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/yarn
            ~/.gradle/nodejs
            ~/.konan
          key: misc-step-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            misc-step-gradle-

      - name: "Set env"
        run: |
          echo "$JAVA_HOME_8_X64/bin" >> $GITHUB_PATH
          echo "JAVA_HOME=$JAVA_HOME_8_X64" >> $GITHUB_ENV

      - name: "Dump new API files"
        run: ./gradlew apiDump

      - name: Stop Gradle daemons
        run: ./gradlew --stop

      - name: "Commit new API files"
        uses: stefanzweifel/git-auto-commit-action@v4.12.0
        with:
          commit_message: Update API files
          file_pattern: arrow-libs/**/api/*.api
