name: "pull_request"

on: pull_request

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.kotlin.dsl.internal.io.timeout=120000 -Dorg.gradle.jvmargs="-Xmx5g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -XX:+UseParallelGC -XX:MaxMetaspaceSize=1g -Dfile.encoding=UTF-8"

concurrency:
  group: pull_request-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ios_watchos:
    runs-on: macos-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: ios and watchos tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: iosSimulatorArm64Test iosX64Test watchosSimulatorArm64Test watchosX64Test --parallel --scan

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: 'reports-ios_watchos'
          path: '**/build/reports/**'

  macos_tvos:
    runs-on: macos-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: macos and tvos tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: macosArm64Test macosX64Test tvosSimulatorArm64Test tvosX64Test  --parallel  --scan

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: 'reports-macos_tvos'
          path: '**/build/reports/**'

  windows:
    runs-on: windows-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: mingwX64Test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: mingwX64Test  --scan

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: 'reports-windows'
          path: '**/build/reports/**'

  check:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: check
        uses: gradle/gradle-build-action@v2
        with:
          arguments: knitCheck apiCheck --scan

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: 'reports-check'
          path: '**/build/reports/**'

  jvmTest:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: jvmTest
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jvmTest --scan

      - name: Create code coverage report
        if: "! github.event.pull_request.head.repo.fork "
        uses: gradle/gradle-build-action@v2
        with:
          arguments: koverXmlReport

      - name: Add coverage report to PR
        if: "! github.event.pull_request.head.repo.fork "
        id: kover
        uses: mi-kas/kover-report@v1
        with:
          path: build/reports/kover/report.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Kover Report
          update-comment: true

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: 'reports-jvmTest'
          path: '**/build/reports/**'

  jvmTestK2:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      KOTLIN_OVERRIDE: 1.9.30-dev-1098

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: jvmTest (K2 enabled)
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jvmTest -Pkotlin.experimental.tryK2=true

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: 'reports-jvmTest'
          path: '**/build/reports/**'

  js:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: kotlinUpgradeYarnLock
        uses: gradle/gradle-build-action@v2
        with:
          arguments: kotlinUpgradeYarnLock

      - name: jsTest
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jsTest  --scan

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: 'reports-js'
          path: '**/build/reports/**'

  linux:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: linuxX64Test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: linuxX64Test  --scan

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: 'reports-linux'
          path: '**/build/reports/**'

  update_api:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: apiDump
        uses: gradle/gradle-build-action@v2
        with:
          arguments: apiDump

      - name: "Commit new API files"
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Update API files
          file_pattern: arrow-libs/**/api/*.api

  spotless:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: spotlessApply
        uses: gradle/gradle-build-action@v2
        with:
          arguments: spotlessApply

      - name: "Commit newly formatted files"
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Apply
          file_pattern: arrow-libs/**/*.kt

