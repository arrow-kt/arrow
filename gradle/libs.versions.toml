[versions]
animalSniffer = "1.5.0"
arrowGradleConfig = "0.3.2"
autoService = "1.0-rc7"
compileTesting = "0.18"
coroutines = "1.5.2"
dokka = "1.5.0"
jUnit = "4.12"
jUnitVintage = "5.5.2"
kotest = "5.0.0.M2"
kotestGradle = "5.0.0.5"
kotlinTest = "3.3.3"
kotlin = "1.5.31"
kotlinBinaryCompatibilityValidator = "0.7.1"
kotlinPoet = "1.5.0"
ktlint = "10.1.0"
mockWebServer = "3.13.1"
retrofit = "2.8.1"

[libraries]
arrow-kotlinMetadata = { module = "io.arrow-kt:kotlin-metadata", version.ref = "kotlin" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
dokka-core = { module = "org.jetbrains.dokka:dokka-core", version.ref = "dokka" }
dokka-base = { module = "org.jetbrains.dokka:dokka-base", version.ref = "dokka" }
dokka-gfmPluginx = { module = "org.jetbrains.dokka:gfm-plugin", version.ref = "dokka" }
google-autoService = { module = "com.google.auto.service:auto-service", version.ref = "autoService" }
google-compileTesting = { module = "com.google.testing.compile:compile-testing", version.ref = "compileTesting" }
jUnitJUnit = { module = "junit:junit", version.ref = "jUnit" }
jUnitVintageEngine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "jUnitVintage" }
kotest-assertionsCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-frameworkEngine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotlinTest-runnerJUnit4 = { module = "io.kotlintest:kotlintest-runner-junit4", version.ref = "kotlinTest" }
kotest-runnerJUnit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotlin-compiler = { module = "org.jetbrains.kotlin:kotlin-compiler" }
kotlin-scriptingCompiler = { module = "org.jetbrains.kotlin:kotlin-scripting-compiler" }
kotlin-scriptUtil = { module = "org.jetbrains.kotlin:kotlin-script-util" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }
kotlin-stdlibCommon = { module = "org.jetbrains.kotlin:kotlin-stdlib-common" }
kotlin-stdlibJDK8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8" }
kotlin-stdlibJS = { module = "org.jetbrains.kotlin:kotlin-stdlib-js" }
squareup-kotlinPoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinPoet" }
squareup-okhttpMockWebServer = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockWebServer" }
squareup-retrofitConverterGson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
squareup-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }

[plugins]
animalSniffer = { id = "ru.vyarus.animalsniffer", version.ref = "animalSniffer" }
arrowGradleConfig-jvm = { id = "io.arrow-kt.arrow-gradle-config-jvm", version.ref = "arrowGradleConfig" }
arrowGradleConfig-multiplatform = { id = "io.arrow-kt.arrow-gradle-config-multiplatform", version.ref = "arrowGradleConfig" }
arrowGradleConfig-nexus = { id = "io.arrow-kt.arrow-gradle-config-nexus", version.ref = "arrowGradleConfig" }
arrowGradleConfig-publishJavaPlatform = { id = "io.arrow-kt.arrow-gradle-config-publish-java-platform", version.ref = "arrowGradleConfig" }
arrowGradleConfig-publishJvm = { id = "io.arrow-kt.arrow-gradle-config-publish-jvm", version.ref = "arrowGradleConfig" }
arrowGradleConfig-publishMultiplatform = { id = "io.arrow-kt.arrow-gradle-config-publish-multiplatform", version.ref = "arrowGradleConfig" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotest-multiplatform = { id = "io.kotest.multiplatform", version.ref = "kotestGradle" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-binaryCompatibilityValidator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "kotlinBinaryCompatibilityValidator" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
