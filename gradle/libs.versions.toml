[versions]
animalSniffer = "1.5.0"
arrowGradleConfig = "0.6.0-alpha.4"
coroutines = "1.6.0-RC2"
dokka = "1.5.30"
jUnit = "4.12"
jUnitVintage = "5.5.2"
kotest = "5.0.2"
kotestGradle = "5.0.2"
kotlin = "1.6.0"
kotlinBinaryCompatibilityValidator = "0.7.1"
knit = "0.3.0"
mockWebServer = "4.9.2"
retrofit = "2.8.1"
arrowMeta = "2.0-SNAPSHOT"
ksp = "1.6.0-1.0.2"

[libraries]
arrow-kotlinMetadata = { module = "io.arrow-kt:kotlin-metadata", version.ref = "kotlin" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
jUnitJUnit = { module = "junit:junit", version.ref = "jUnit" }
jUnitVintageEngine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "jUnitVintage" }
kotest-assertionsCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-frameworkEngine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runnerJUnit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }
kotlin-stdlibCommon = { module = "org.jetbrains.kotlin:kotlin-stdlib-common" }
kotlin-stdlibJDK8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8" }
kotlin-stdlibJS = { module = "org.jetbrains.kotlin:kotlin-stdlib-js" }
kotlinx-knit = { module = "org.jetbrains.kotlinx:kotlinx-knit", version.ref = "knit" }
squareup-okhttpMockWebServer = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockWebServer" }
squareup-retrofitConverterGson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
squareup-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
arrow-optics-ksp = { module = "io.arrow-kt:arrow-optics-ksp", version.ref="arrowMeta" }

[plugins]
animalSniffer = { id = "ru.vyarus.animalsniffer", version.ref = "animalSniffer" }
arrowGradleConfig-formatter = { id = "io.arrow-kt.arrow-gradle-config-formatter", version.ref = "arrowGradleConfig" }
arrowGradleConfig-kotlin = { id = "io.arrow-kt.arrow-gradle-config-kotlin", version.ref = "arrowGradleConfig" }
arrowGradleConfig-nexus = { id = "io.arrow-kt.arrow-gradle-config-nexus", version.ref = "arrowGradleConfig" }
arrowGradleConfig-publish = { id = "io.arrow-kt.arrow-gradle-config-publish", version.ref = "arrowGradleConfig" }
arrowGradleConfig-versioning = { id = "io.arrow-kt.arrow-gradle-config-versioning", version.ref = "arrowGradleConfig" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotest-multiplatform = { id = "io.kotest.multiplatform", version.ref = "kotestGradle" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-binaryCompatibilityValidator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "kotlinBinaryCompatibilityValidator" }
kotlinx-knit = { id = "org.jetbrains.kotlinx.knit", version.ref = "knit" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }