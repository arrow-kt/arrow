// Generated by raise-ktor-server.main.kts

package arrow.raise.ktor.server

import arrow.core.raise.RaiseDSL
import io.ktor.http.*
import io.ktor.server.routing.*
import io.ktor.utils.io.*
import kotlin.jvm.JvmName

@KtorDsl
@RaiseDSL
@JvmName("patchOrRaiseTyped")
public inline fun <reified Request : Any, reified Response> Route.patchOrRaise(
  statusCode: HttpStatusCode? = null,
  body: ReceivingRespondOrRaiseHandler<Request, Response>,
): Route = patch<Request>(body.asKtorHandler(statusCode))

@KtorDsl
@RaiseDSL
@JvmName("patchOrRaiseTypedPath")
public inline fun <reified Request : Any, reified Response> Route.patchOrRaise(
  path: String,
  statusCode: HttpStatusCode? = null,
  body: ReceivingRespondOrRaiseHandler<Request, Response>,
): Route = patch<Request>(path, body.asKtorHandler(statusCode))

@KtorDsl
@RaiseDSL
@JvmName("patchOrRaiseTypedRegex")
public inline fun <reified Request : Any, reified Response> Route.patchOrRaise(
  path: Regex,
  statusCode: HttpStatusCode? = null,
  body: ReceivingRespondOrRaiseHandler<Request, Response>,
): Route = patch<Request>(path, body.asKtorHandler(statusCode))

@KtorDsl
@RaiseDSL
@JvmName("postOrRaiseTyped")
public inline fun <reified Request : Any, reified Response> Route.postOrRaise(
  statusCode: HttpStatusCode? = null,
  body: ReceivingRespondOrRaiseHandler<Request, Response>,
): Route = post<Request>(body.asKtorHandler(statusCode))

@KtorDsl
@RaiseDSL
@JvmName("postOrRaiseTypedPath")
public inline fun <reified Request : Any, reified Response> Route.postOrRaise(
  path: String,
  statusCode: HttpStatusCode? = null,
  body: ReceivingRespondOrRaiseHandler<Request, Response>,
): Route = post<Request>(path, body.asKtorHandler(statusCode))

@KtorDsl
@RaiseDSL
@JvmName("postOrRaiseTypedRegex")
public inline fun <reified Request : Any, reified Response> Route.postOrRaise(
  path: Regex,
  statusCode: HttpStatusCode? = null,
  body: ReceivingRespondOrRaiseHandler<Request, Response>,
): Route = post<Request>(path, body.asKtorHandler(statusCode))

@KtorDsl
@RaiseDSL
@JvmName("putOrRaiseTyped")
public inline fun <reified Request : Any, reified Response> Route.putOrRaise(
  statusCode: HttpStatusCode? = null,
  body: ReceivingRespondOrRaiseHandler<Request, Response>,
): Route = put<Request>(body.asKtorHandler(statusCode))

@KtorDsl
@RaiseDSL
@JvmName("putOrRaiseTypedPath")
public inline fun <reified Request : Any, reified Response> Route.putOrRaise(
  path: String,
  statusCode: HttpStatusCode? = null,
  body: ReceivingRespondOrRaiseHandler<Request, Response>,
): Route = put<Request>(path, body.asKtorHandler(statusCode))

@KtorDsl
@RaiseDSL
@JvmName("putOrRaiseTypedRegex")
public inline fun <reified Request : Any, reified Response> Route.putOrRaise(
  path: Regex,
  statusCode: HttpStatusCode? = null,
  body: ReceivingRespondOrRaiseHandler<Request, Response>,
): Route = put<Request>(path, body.asKtorHandler(statusCode))
