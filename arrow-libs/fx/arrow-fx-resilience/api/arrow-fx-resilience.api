public final class arrow/fx/resilience/CircuitBreaker {
	public static final field Companion Larrow/fx/resilience/CircuitBreaker$Companion;
	public synthetic fun <init> (Ljava/util/concurrent/atomic/AtomicReference;IDDDLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun awaitClose (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun doOnClosed (Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/CircuitBreaker;
	public final fun doOnHalfOpen (Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/CircuitBreaker;
	public final fun doOnOpen (Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/CircuitBreaker;
	public final fun doOnRejectedTask (Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/CircuitBreaker;
	public final fun protectEither (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun protectOrThrow (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun state (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class arrow/fx/resilience/CircuitBreaker$Companion {
	public final fun of (IDDDLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun of$default (Larrow/fx/resilience/CircuitBreaker$Companion;IDDDLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun of-3c68mSE (IJDJLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun of-3c68mSE$default (Larrow/fx/resilience/CircuitBreaker$Companion;IJDJLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class arrow/fx/resilience/CircuitBreaker$ExecutionRejected : java/lang/Throwable {
	public fun <init> (Ljava/lang/String;Larrow/fx/resilience/CircuitBreaker$State;)V
	public final fun getReason ()Ljava/lang/String;
	public final fun getState ()Larrow/fx/resilience/CircuitBreaker$State;
}

public abstract class arrow/fx/resilience/CircuitBreaker$State {
}

public final class arrow/fx/resilience/CircuitBreaker$State$Closed : arrow/fx/resilience/CircuitBreaker$State {
	public fun <init> (I)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFailures ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class arrow/fx/resilience/CircuitBreaker$State$HalfOpen : arrow/fx/resilience/CircuitBreaker$State {
	public fun <init> (D)V
	public synthetic fun <init> (JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getResetTimeout-UwyO8pc ()J
	public final fun getResetTimeoutNanos ()D
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class arrow/fx/resilience/CircuitBreaker$State$Open : arrow/fx/resilience/CircuitBreaker$State {
	public fun <init> (JD)V
	public synthetic fun <init> (JJLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExpiresAt ()J
	public final fun getResetTimeout-UwyO8pc ()J
	public final fun getResetTimeoutNanos ()D
	public final fun getStartedAt ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class arrow/fx/resilience/FlowKt {
	public static final fun retry (Lkotlinx/coroutines/flow/Flow;Larrow/fx/resilience/Schedule;)Lkotlinx/coroutines/flow/Flow;
}

public abstract class arrow/fx/resilience/Schedule {
	public static final field Companion Larrow/fx/resilience/Schedule$Companion;
	public final fun and (Larrow/fx/resilience/Schedule;)Larrow/fx/resilience/Schedule;
	public abstract fun andThen (Larrow/fx/resilience/Schedule;)Larrow/fx/resilience/Schedule;
	public abstract fun check (Lkotlin/jvm/functions/Function3;)Larrow/fx/resilience/Schedule;
	public abstract fun choose (Larrow/fx/resilience/Schedule;)Larrow/fx/resilience/Schedule;
	public final fun collect ()Larrow/fx/resilience/Schedule;
	public abstract fun combine (Larrow/fx/resilience/Schedule;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public final fun combineNanos (Larrow/fx/resilience/Schedule;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public final fun compose (Larrow/fx/resilience/Schedule;)Larrow/fx/resilience/Schedule;
	public final fun const (Ljava/lang/Object;)Larrow/fx/resilience/Schedule;
	public abstract fun contramap (Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public final fun delay (Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public final fun delayedNanos (Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public final fun dimap (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/Schedule;
	public final fun fold (Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Larrow/fx/resilience/Schedule;
	public abstract fun foldLazy (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;)Larrow/fx/resilience/Schedule;
	public abstract fun forever ()Larrow/fx/resilience/Schedule;
	public final fun jittered (Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/Schedule;
	public final fun jittered (Lkotlin/random/Random;)Larrow/fx/resilience/Schedule;
	public static synthetic fun jittered$default (Larrow/fx/resilience/Schedule;Lkotlin/random/Random;ILjava/lang/Object;)Larrow/fx/resilience/Schedule;
	public final fun jitteredDuration (Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/Schedule;
	public abstract fun logInput (Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public abstract fun logOutput (Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public abstract fun map (Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/Schedule;
	public abstract fun modify (Lkotlin/jvm/functions/Function3;)Larrow/fx/resilience/Schedule;
	public final fun modifyNanos (Lkotlin/jvm/functions/Function3;)Larrow/fx/resilience/Schedule;
	public abstract fun not ()Larrow/fx/resilience/Schedule;
	public final fun or (Larrow/fx/resilience/Schedule;)Larrow/fx/resilience/Schedule;
	public abstract fun pipe (Larrow/fx/resilience/Schedule;)Larrow/fx/resilience/Schedule;
	public final fun repeat (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun repeatAsFlow (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun repeatOrElse (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun repeatOrElseAsFlow (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun repeatOrElseEither (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun repeatOrElseEitherAsFlow (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun untilInput (Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public final fun untilOutput (Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public final fun void ()Larrow/fx/resilience/Schedule;
	public final fun whileInput (Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public final fun whileOutput (Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public final fun zip (Larrow/fx/resilience/Schedule;)Larrow/fx/resilience/Schedule;
	public abstract fun zip (Larrow/fx/resilience/Schedule;Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public final fun zipLeft (Larrow/fx/resilience/Schedule;)Larrow/fx/resilience/Schedule;
	public final fun zipRight (Larrow/fx/resilience/Schedule;)Larrow/fx/resilience/Schedule;
}

public final class arrow/fx/resilience/Schedule$Companion {
	public final fun collect ()Larrow/fx/resilience/Schedule;
	public final fun decision ()Larrow/fx/resilience/Schedule;
	public final fun delayInNanos ()Larrow/fx/resilience/Schedule;
	public final fun delayedDuration (Larrow/fx/resilience/Schedule;)Larrow/fx/resilience/Schedule;
	public final fun delayedNanos (Larrow/fx/resilience/Schedule;)Larrow/fx/resilience/Schedule;
	public final fun doUntil (Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public final fun doWhile (Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public final fun duration ()Larrow/fx/resilience/Schedule;
	public final fun exponential (DD)Larrow/fx/resilience/Schedule;
	public static synthetic fun exponential$default (Larrow/fx/resilience/Schedule$Companion;DDILjava/lang/Object;)Larrow/fx/resilience/Schedule;
	public final fun exponential-VtjQ1oo (JD)Larrow/fx/resilience/Schedule;
	public static synthetic fun exponential-VtjQ1oo$default (Larrow/fx/resilience/Schedule$Companion;JDILjava/lang/Object;)Larrow/fx/resilience/Schedule;
	public final fun fibonacci (D)Larrow/fx/resilience/Schedule;
	public final fun fibonacci-LRDsOJo (J)Larrow/fx/resilience/Schedule;
	public final fun forever ()Larrow/fx/resilience/Schedule;
	public final fun identity ()Larrow/fx/resilience/Schedule;
	public final fun invoke (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;)Larrow/fx/resilience/Schedule;
	public final fun linear (D)Larrow/fx/resilience/Schedule;
	public final fun linear-LRDsOJo (J)Larrow/fx/resilience/Schedule;
	public final fun logInput (Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public final fun logOutput (Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public final fun never ()Larrow/fx/resilience/Schedule;
	public final fun once ()Larrow/fx/resilience/Schedule;
	public final fun recurs (I)Larrow/fx/resilience/Schedule;
	public final fun spaced (D)Larrow/fx/resilience/Schedule;
	public final fun spaced-LRDsOJo (J)Larrow/fx/resilience/Schedule;
	public final fun unfold (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/Schedule;
	public final fun unfoldLazy (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public final fun unit ()Larrow/fx/resilience/Schedule;
}

public final class arrow/fx/resilience/Schedule$Decision {
	public static final field Companion Larrow/fx/resilience/Schedule$Decision$Companion;
	public fun <init> (ZDLjava/lang/Object;Larrow/core/Eval;)V
	public synthetic fun <init> (ZJLjava/lang/Object;Larrow/core/Eval;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun bimap (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/Schedule$Decision;
	public final fun combine (Larrow/fx/resilience/Schedule$Decision;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule$Decision;
	public final fun combineNanos (Larrow/fx/resilience/Schedule$Decision;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule$Decision;
	public final fun component1 ()Z
	public final fun component2-UwyO8pc ()J
	public final fun component3 ()Ljava/lang/Object;
	public final fun component4 ()Larrow/core/Eval;
	public final fun copy-dWUq8MI (ZJLjava/lang/Object;Larrow/core/Eval;)Larrow/fx/resilience/Schedule$Decision;
	public static synthetic fun copy-dWUq8MI$default (Larrow/fx/resilience/Schedule$Decision;ZJLjava/lang/Object;Larrow/core/Eval;ILjava/lang/Object;)Larrow/fx/resilience/Schedule$Decision;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCont ()Z
	public final fun getDelayInNanos ()D
	public final fun getDuration-UwyO8pc ()J
	public final fun getFinish ()Larrow/core/Eval;
	public final fun getState ()Ljava/lang/Object;
	public fun hashCode ()I
	public final fun map (Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/Schedule$Decision;
	public final fun mapLeft (Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/Schedule$Decision;
	public final fun not ()Larrow/fx/resilience/Schedule$Decision;
	public fun toString ()Ljava/lang/String;
}

public final class arrow/fx/resilience/Schedule$Decision$Companion {
	public final fun cont (DLjava/lang/Object;Larrow/core/Eval;)Larrow/fx/resilience/Schedule$Decision;
	public final fun cont-KLykuaI (JLjava/lang/Object;Larrow/core/Eval;)Larrow/fx/resilience/Schedule$Decision;
	public final fun done (DLjava/lang/Object;Larrow/core/Eval;)Larrow/fx/resilience/Schedule$Decision;
	public final fun done-KLykuaI (JLjava/lang/Object;Larrow/core/Eval;)Larrow/fx/resilience/Schedule$Decision;
}

public final class arrow/fx/resilience/ScheduleKt {
	public static final field NanosDeprecation Ljava/lang/String;
	public static final fun retry (Larrow/fx/resilience/Schedule;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun retryOrElse (Larrow/fx/resilience/Schedule;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun retryOrElseEither (Larrow/fx/resilience/Schedule;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

