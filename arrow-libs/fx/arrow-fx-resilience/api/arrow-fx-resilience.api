public final class arrow/fx/resilience/CircuitBreaker {
	public static final field Companion Larrow/fx/resilience/CircuitBreaker$Companion;
	public synthetic fun <init> (Ljava/util/concurrent/atomic/AtomicReference;DDDLkotlin/time/TimeSource;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun awaitClose (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun doOnClosed (Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/CircuitBreaker;
	public final fun doOnHalfOpen (Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/CircuitBreaker;
	public final fun doOnOpen (Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/CircuitBreaker;
	public final fun doOnRejectedTask (Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/CircuitBreaker;
	public final fun protectEither (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun protectOrThrow (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun state (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class arrow/fx/resilience/CircuitBreaker$Companion {
	public final fun invoke-MWqDXGA (JLarrow/fx/resilience/CircuitBreaker$OpeningStrategy;DJLkotlin/time/TimeSource;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Larrow/fx/resilience/CircuitBreaker;
	public static synthetic fun invoke-MWqDXGA$default (Larrow/fx/resilience/CircuitBreaker$Companion;JLarrow/fx/resilience/CircuitBreaker$OpeningStrategy;DJLkotlin/time/TimeSource;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Larrow/fx/resilience/CircuitBreaker;
	public final fun of (DLarrow/fx/resilience/CircuitBreaker$OpeningStrategy;DDLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun of$default (Larrow/fx/resilience/CircuitBreaker$Companion;DLarrow/fx/resilience/CircuitBreaker$OpeningStrategy;DDLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun of-MWqDXGA (JLarrow/fx/resilience/CircuitBreaker$OpeningStrategy;DJLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun of-MWqDXGA$default (Larrow/fx/resilience/CircuitBreaker$Companion;JLarrow/fx/resilience/CircuitBreaker$OpeningStrategy;DJLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class arrow/fx/resilience/CircuitBreaker$ExecutionRejected : java/lang/Throwable {
	public fun <init> (Ljava/lang/String;Larrow/fx/resilience/CircuitBreaker$State;)V
	public final fun getReason ()Ljava/lang/String;
	public final fun getState ()Larrow/fx/resilience/CircuitBreaker$State;
}

public abstract class arrow/fx/resilience/CircuitBreaker$OpeningStrategy {
}

public final class arrow/fx/resilience/CircuitBreaker$OpeningStrategy$Count : arrow/fx/resilience/CircuitBreaker$OpeningStrategy {
	public static final field Companion Larrow/fx/resilience/CircuitBreaker$OpeningStrategy$Count$Companion;
	public fun <init> (II)V
	public synthetic fun <init> (IIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun copy (II)Larrow/fx/resilience/CircuitBreaker$OpeningStrategy$Count;
	public static synthetic fun copy$default (Larrow/fx/resilience/CircuitBreaker$OpeningStrategy$Count;IIILjava/lang/Object;)Larrow/fx/resilience/CircuitBreaker$OpeningStrategy$Count;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFailuresCount ()I
	public final fun getMaxFailures ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class arrow/fx/resilience/CircuitBreaker$OpeningStrategy$Count$Companion {
	public final fun invoke (I)Larrow/fx/resilience/CircuitBreaker$OpeningStrategy$Count;
}

public final class arrow/fx/resilience/CircuitBreaker$OpeningStrategy$SlidingWindow : arrow/fx/resilience/CircuitBreaker$OpeningStrategy {
	public static final field Companion Larrow/fx/resilience/CircuitBreaker$OpeningStrategy$SlidingWindow$Companion;
	public synthetic fun <init> (Lkotlin/time/TimeSource;Ljava/util/List;JILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lkotlin/time/TimeSource;
	public final fun component2 ()Ljava/util/List;
	public final fun component3-UwyO8pc ()J
	public final fun component4 ()I
	public final fun copy-exY8QGI (Lkotlin/time/TimeSource;Ljava/util/List;JI)Larrow/fx/resilience/CircuitBreaker$OpeningStrategy$SlidingWindow;
	public static synthetic fun copy-exY8QGI$default (Larrow/fx/resilience/CircuitBreaker$OpeningStrategy$SlidingWindow;Lkotlin/time/TimeSource;Ljava/util/List;JIILjava/lang/Object;)Larrow/fx/resilience/CircuitBreaker$OpeningStrategy$SlidingWindow;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFailures ()Ljava/util/List;
	public final fun getMaxFailures ()I
	public final fun getTimeSource ()Lkotlin/time/TimeSource;
	public final fun getWindowDuration-UwyO8pc ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class arrow/fx/resilience/CircuitBreaker$OpeningStrategy$SlidingWindow$Companion {
	public final fun invoke-8Mi8wO0 (Lkotlin/time/TimeSource;JI)Larrow/fx/resilience/CircuitBreaker$OpeningStrategy$SlidingWindow;
}

public abstract class arrow/fx/resilience/CircuitBreaker$State {
	public abstract fun getOpeningStrategy ()Larrow/fx/resilience/CircuitBreaker$OpeningStrategy;
}

public final class arrow/fx/resilience/CircuitBreaker$State$Closed : arrow/fx/resilience/CircuitBreaker$State {
	public fun <init> (Larrow/fx/resilience/CircuitBreaker$OpeningStrategy;)V
	public fun getOpeningStrategy ()Larrow/fx/resilience/CircuitBreaker$OpeningStrategy;
}

public final class arrow/fx/resilience/CircuitBreaker$State$HalfOpen : arrow/fx/resilience/CircuitBreaker$State {
	public fun <init> (Larrow/fx/resilience/CircuitBreaker$OpeningStrategy;D)V
	public synthetic fun <init> (Larrow/fx/resilience/CircuitBreaker$OpeningStrategy;JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getOpeningStrategy ()Larrow/fx/resilience/CircuitBreaker$OpeningStrategy;
	public final fun getResetTimeout-UwyO8pc ()J
	public final fun getResetTimeoutNanos ()D
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class arrow/fx/resilience/CircuitBreaker$State$Open : arrow/fx/resilience/CircuitBreaker$State {
	public fun <init> (Larrow/fx/resilience/CircuitBreaker$OpeningStrategy;JD)V
	public synthetic fun <init> (Larrow/fx/resilience/CircuitBreaker$OpeningStrategy;JJLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExpiresAt ()Lkotlin/time/TimeMark;
	public fun getOpeningStrategy ()Larrow/fx/resilience/CircuitBreaker$OpeningStrategy;
	public final fun getResetTimeout-UwyO8pc ()J
	public final fun getResetTimeoutNanos ()D
	public final fun getStartedAt ()Lkotlin/time/TimeMark;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class arrow/fx/resilience/FlowKt {
	public static final fun retry-dkRSkxk (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;
}

public final class arrow/fx/resilience/SagaActionStep {
	public static final field INSTANCE Larrow/fx/resilience/SagaActionStep;
}

public final class arrow/fx/resilience/SagaBuilder : arrow/fx/resilience/SagaScope {
	public fun <init> ()V
	public fun <init> (Ljava/util/concurrent/atomic/AtomicReference;)V
	public synthetic fun <init> (Ljava/util/concurrent/atomic/AtomicReference;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun bind (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun invoke (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun saga (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun totalCompensation (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface annotation class arrow/fx/resilience/SagaDSLMarker : java/lang/annotation/Annotation {
}

public final class arrow/fx/resilience/SagaKt {
	public static final fun saga (Lkotlin/jvm/functions/Function2;)Lkotlin/jvm/functions/Function2;
	public static final fun saga (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lkotlin/jvm/functions/Function2;
	public static final fun transact (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class arrow/fx/resilience/SagaScope {
	public abstract fun bind (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun invoke (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun saga (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class arrow/fx/resilience/SagaScope$DefaultImpls {
	public static fun bind (Larrow/fx/resilience/SagaScope;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun invoke (Larrow/fx/resilience/SagaScope;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class arrow/fx/resilience/Schedule {
	public static final field Companion Larrow/fx/resilience/Schedule$Companion;
	public static final fun and-TAF2p8g (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function3;)Lkotlin/jvm/functions/Function2;
	public static final fun and-nZJhjPk (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lkotlin/jvm/functions/Function2;
	public static final fun and-trTh5YI (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function3;)Lkotlin/jvm/functions/Function2;
	public static final fun andThen-TAF2p8g (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lkotlin/jvm/functions/Function2;
	public static final fun andThen-nZJhjPk (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lkotlin/jvm/functions/Function2;
	public static final synthetic fun box-impl (Lkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule;
	public static final fun collect-n7EYv7Q (Lkotlin/jvm/functions/Function2;)Lkotlin/jvm/functions/Function2;
	public static fun constructor-impl (Lkotlin/jvm/functions/Function2;)Lkotlin/jvm/functions/Function2;
	public static final fun contramap-nxrvn7M (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lkotlin/jvm/functions/Function2;
	public static final fun delayed-nxrvn7M (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function3;)Lkotlin/jvm/functions/Function2;
	public static final fun doUntil-nxrvn7M (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function3;)Lkotlin/jvm/functions/Function2;
	public static final fun doWhile-nxrvn7M (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function3;)Lkotlin/jvm/functions/Function2;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/jvm/functions/Function2;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Z
	public static final fun fold-QrgEJug (Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Lkotlin/jvm/functions/Function2;
	public final fun getStep ()Lkotlin/jvm/functions/Function2;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/jvm/functions/Function2;)I
	public static final fun jittered-wpSosaM (Lkotlin/jvm/functions/Function2;DDLkotlin/random/Random;)Lkotlin/jvm/functions/Function2;
	public static synthetic fun jittered-wpSosaM$default (Lkotlin/jvm/functions/Function2;DDLkotlin/random/Random;ILjava/lang/Object;)Lkotlin/jvm/functions/Function2;
	public static final fun log-nxrvn7M (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function3;)Lkotlin/jvm/functions/Function2;
	public static final fun map-nxrvn7M (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lkotlin/jvm/functions/Function2;
	public static final fun mapDecision-nxrvn7M (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lkotlin/jvm/functions/Function2;
	public static final fun or-TAF2p8g (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function3;)Lkotlin/jvm/functions/Function2;
	public static final fun repeat-impl (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun repeatOrElse-impl (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun repeatOrElseEither-impl (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/jvm/functions/Function2;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/jvm/functions/Function2;
	public static final fun zipLeft-nZJhjPk (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lkotlin/jvm/functions/Function2;
	public static final fun zipRight-nZJhjPk (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lkotlin/jvm/functions/Function2;
}

public final class arrow/fx/resilience/Schedule$Companion {
	public final fun collect-n7EYv7Q ()Lkotlin/jvm/functions/Function2;
	public final fun doUntil-nxrvn7M (Lkotlin/jvm/functions/Function3;)Lkotlin/jvm/functions/Function2;
	public final fun doWhile-nxrvn7M (Lkotlin/jvm/functions/Function3;)Lkotlin/jvm/functions/Function2;
	public final fun exponential-WtiCasI (JD)Lkotlin/jvm/functions/Function2;
	public static synthetic fun exponential-WtiCasI$default (Larrow/fx/resilience/Schedule$Companion;JDILjava/lang/Object;)Lkotlin/jvm/functions/Function2;
	public final fun fibonacci-xw-eLiE (J)Lkotlin/jvm/functions/Function2;
	public final fun forever-n7EYv7Q ()Lkotlin/jvm/functions/Function2;
	public final fun identity-n7EYv7Q ()Lkotlin/jvm/functions/Function2;
	public final fun linear-xw-eLiE (J)Lkotlin/jvm/functions/Function2;
	public final fun recurs-nxrvn7M (J)Lkotlin/jvm/functions/Function2;
	public final fun spaced-xw-eLiE (J)Lkotlin/jvm/functions/Function2;
	public final fun unfold-QrgEJug (Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Lkotlin/jvm/functions/Function2;
}

public abstract interface class arrow/fx/resilience/Schedule$Decision {
	public abstract fun and (Larrow/fx/resilience/Schedule$Decision;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun andThen (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun andThen (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun contramap (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delayed (Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getOutput ()Ljava/lang/Object;
	public abstract fun map (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun or (Larrow/fx/resilience/Schedule$Decision;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun recursiveMap (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class arrow/fx/resilience/Schedule$Decision$Continue : arrow/fx/resilience/Schedule$Decision {
	public synthetic fun <init> (Ljava/lang/Object;JLkotlin/jvm/functions/Function2;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun and (Larrow/fx/resilience/Schedule$Decision;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun andThen (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun andThen (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun component1 ()Ljava/lang/Object;
	public final fun component2-UwyO8pc ()J
	public final fun component3 ()Lkotlin/jvm/functions/Function2;
	public fun contramap (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun copy-8Mi8wO0 (Ljava/lang/Object;JLkotlin/jvm/functions/Function2;)Larrow/fx/resilience/Schedule$Decision$Continue;
	public static synthetic fun copy-8Mi8wO0$default (Larrow/fx/resilience/Schedule$Decision$Continue;Ljava/lang/Object;JLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Larrow/fx/resilience/Schedule$Decision$Continue;
	public fun delayed (Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDelay-UwyO8pc ()J
	public fun getOutput ()Ljava/lang/Object;
	public final fun getStep ()Lkotlin/jvm/functions/Function2;
	public fun hashCode ()I
	public fun map (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun or (Larrow/fx/resilience/Schedule$Decision;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun recursiveMap (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class arrow/fx/resilience/Schedule$Decision$DefaultImpls {
	public static fun and (Larrow/fx/resilience/Schedule$Decision;Larrow/fx/resilience/Schedule$Decision;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun andThen (Larrow/fx/resilience/Schedule$Decision;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun andThen (Larrow/fx/resilience/Schedule$Decision;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun contramap (Larrow/fx/resilience/Schedule$Decision;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delayed (Larrow/fx/resilience/Schedule$Decision;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun map (Larrow/fx/resilience/Schedule$Decision;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun or (Larrow/fx/resilience/Schedule$Decision;Larrow/fx/resilience/Schedule$Decision;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun recursiveMap (Larrow/fx/resilience/Schedule$Decision;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class arrow/fx/resilience/Schedule$Decision$Done : arrow/fx/resilience/Schedule$Decision {
	public fun <init> (Ljava/lang/Object;)V
	public fun and (Larrow/fx/resilience/Schedule$Decision;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun andThen (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun andThen (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun component1 ()Ljava/lang/Object;
	public fun contramap (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun copy (Ljava/lang/Object;)Larrow/fx/resilience/Schedule$Decision$Done;
	public static synthetic fun copy$default (Larrow/fx/resilience/Schedule$Decision$Done;Ljava/lang/Object;ILjava/lang/Object;)Larrow/fx/resilience/Schedule$Decision$Done;
	public fun delayed (Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getOutput ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun map (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun or (Larrow/fx/resilience/Schedule$Decision;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun recursiveMap (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class arrow/fx/resilience/ScheduleKt {
	public static final fun retry-5vsoNNI (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun retryOrElse-X2tg264 (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun retryOrElseEither-X2tg264 (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class arrow/fx/resilience/TimeInMillisKt {
	public static final fun timeInMillis ()J
}

public final class arrow/fx/resilience/common/Platform : java/lang/Enum {
	public static final field JS Larrow/fx/resilience/common/Platform;
	public static final field JVM Larrow/fx/resilience/common/Platform;
	public static final field Native Larrow/fx/resilience/common/Platform;
	public static fun valueOf (Ljava/lang/String;)Larrow/fx/resilience/common/Platform;
	public static fun values ()[Larrow/fx/resilience/common/Platform;
}

public final class arrow/fx/resilience/common/PlatformKt {
	public static final fun getPlatform ()Larrow/fx/resilience/common/Platform;
}

