// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, watchosArm32, watchosArm64, watchosSimulatorArm64, watchosX64]
// Alias: native => [iosArm64, iosSimulatorArm64, iosX64, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, watchosArm32, watchosArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <io.arrow-kt:suspendapp>
abstract interface arrow.continuations/Process : kotlin/AutoCloseable { // arrow.continuations/Process|null[0]
    abstract fun close() // arrow.continuations/Process.close|close(){}[0]
    abstract fun exit(kotlin/Int) // arrow.continuations/Process.exit|exit(kotlin.Int){}[0]
    abstract fun onShutdown(kotlin.coroutines/SuspendFunction0<kotlin/Unit>): kotlin.coroutines/SuspendFunction0<kotlin/Unit> // arrow.continuations/Process.onShutdown|onShutdown(kotlin.coroutines.SuspendFunction0<kotlin.Unit>){}[0]
    abstract fun onSigInt(kotlin.coroutines/SuspendFunction1<kotlin/Int, kotlin/Unit>) // arrow.continuations/Process.onSigInt|onSigInt(kotlin.coroutines.SuspendFunction1<kotlin.Int,kotlin.Unit>){}[0]
    abstract fun onSigTerm(kotlin.coroutines/SuspendFunction1<kotlin/Int, kotlin/Unit>) // arrow.continuations/Process.onSigTerm|onSigTerm(kotlin.coroutines.SuspendFunction1<kotlin.Int,kotlin.Unit>){}[0]
    abstract fun runScope(kotlin.coroutines/CoroutineContext, kotlin.coroutines/SuspendFunction1<kotlinx.coroutines/CoroutineScope, kotlin/Unit>) // arrow.continuations/Process.runScope|runScope(kotlin.coroutines.CoroutineContext;kotlin.coroutines.SuspendFunction1<kotlinx.coroutines.CoroutineScope,kotlin.Unit>){}[0]
}

final fun arrow.continuations/SuspendApp(kotlin.coroutines/CoroutineContext = ..., kotlin/Function1<kotlin/Throwable, kotlin/Unit> = ..., kotlin.time/Duration = ..., arrow.continuations/Process = ..., kotlin.coroutines/SuspendFunction1<kotlinx.coroutines/CoroutineScope, kotlin/Unit>) // arrow.continuations/SuspendApp|SuspendApp(kotlin.coroutines.CoroutineContext;kotlin.Function1<kotlin.Throwable,kotlin.Unit>;kotlin.time.Duration;arrow.continuations.Process;kotlin.coroutines.SuspendFunction1<kotlinx.coroutines.CoroutineScope,kotlin.Unit>){}[0]
final fun arrow.continuations/process(): arrow.continuations/Process // arrow.continuations/process|process(){}[0]

// Targets: [native]
final const val arrow.continuations/SIGINFO // arrow.continuations/SIGINFO|{}SIGINFO[0]
    final fun <get-SIGINFO>(): kotlin/Int // arrow.continuations/SIGINFO.<get-SIGINFO>|<get-SIGINFO>(){}[0]

// Targets: [native]
final val arrow.continuations/SIGUSR1 // arrow.continuations/SIGUSR1|{}SIGUSR1[0]
    final fun <get-SIGUSR1>(): kotlin/Int? // arrow.continuations/SIGUSR1.<get-SIGUSR1>|<get-SIGUSR1>(){}[0]

// Targets: [js, wasmJs]
final object arrow.continuations/JsProcess : arrow.continuations/Process { // arrow.continuations/JsProcess|null[0]
    final fun close() // arrow.continuations/JsProcess.close|close(){}[0]
    final fun exit(kotlin/Int) // arrow.continuations/JsProcess.exit|exit(kotlin.Int){}[0]
    final fun onShutdown(kotlin.coroutines/SuspendFunction0<kotlin/Unit>): kotlin.coroutines/SuspendFunction0<kotlin/Unit> // arrow.continuations/JsProcess.onShutdown|onShutdown(kotlin.coroutines.SuspendFunction0<kotlin.Unit>){}[0]
    final fun onSigInt(kotlin.coroutines/SuspendFunction1<kotlin/Int, kotlin/Unit>) // arrow.continuations/JsProcess.onSigInt|onSigInt(kotlin.coroutines.SuspendFunction1<kotlin.Int,kotlin.Unit>){}[0]
    final fun onSigTerm(kotlin.coroutines/SuspendFunction1<kotlin/Int, kotlin/Unit>) // arrow.continuations/JsProcess.onSigTerm|onSigTerm(kotlin.coroutines.SuspendFunction1<kotlin.Int,kotlin.Unit>){}[0]
    final fun runScope(kotlin.coroutines/CoroutineContext, kotlin.coroutines/SuspendFunction1<kotlinx.coroutines/CoroutineScope, kotlin/Unit>) // arrow.continuations/JsProcess.runScope|runScope(kotlin.coroutines.CoroutineContext;kotlin.coroutines.SuspendFunction1<kotlinx.coroutines.CoroutineScope,kotlin.Unit>){}[0]
}

// Targets: [wasmJs]
final fun arrow.continuations/jsExit(kotlin/Int) // arrow.continuations/jsExit|jsExit(kotlin.Int){}[0]

// Targets: [wasmJs]
final fun arrow.continuations/processOn(kotlin/Function0<kotlin.js/Promise<kotlin.js/JsAny?>>) // arrow.continuations/processOn|processOn(kotlin.Function0<kotlin.js.Promise<kotlin.js.JsAny?>>){}[0]
