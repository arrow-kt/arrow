// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, watchosArm32, watchosArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <io.arrow-kt:arrow-match>
abstract class <#A: kotlin/Any?, #B: kotlin/Any?> arrow.match/MatchScope { // arrow.match/MatchScope|null[0]
    constructor <init>() // arrow.match/MatchScope.<init>|<init>(){}[0]

    final val it // arrow.match/MatchScope.it|{}it[0]
        final fun <get-it>(): kotlin.reflect/KProperty1<#A, #A> // arrow.match/MatchScope.it.<get-it>|<get-it>(){}[0]

    abstract fun <#A1: kotlin/Any?> (kotlin.reflect/KProperty1<#A, #A1>).then(kotlin/Function1<#A1, #B>) // arrow.match/MatchScope.then|then@kotlin.reflect.KProperty1<1:0,0:0>(kotlin.Function1<0:0,1:1>){0§<kotlin.Any?>}[0]
    abstract fun default(kotlin/Function0<#B>) // arrow.match/MatchScope.default|default(kotlin.Function0<1:1>){}[0]
    final inline fun <#A1: reified #A!!, #B1: kotlin/Any?, #C1: kotlin/Any?, #D1: kotlin/Any?, #E1: kotlin/Any?, #F1: kotlin/Any?> (kotlin.reflect/KClass<#A1>).of(kotlin.reflect/KProperty1<#A1, #B1>, kotlin.reflect/KProperty1<#A1, #C1>, kotlin.reflect/KProperty1<#A1, #D1>, kotlin.reflect/KProperty1<#A1, #E1>, kotlin.reflect/KProperty1<#A1, #F1>): kotlin.reflect/KProperty1<#A, arrow.core/Tuple5<#B1, #C1, #D1, #E1, #F1>> // arrow.match/MatchScope.of|of@kotlin.reflect.KClass<0:0>(kotlin.reflect.KProperty1<0:0,0:1>;kotlin.reflect.KProperty1<0:0,0:2>;kotlin.reflect.KProperty1<0:0,0:3>;kotlin.reflect.KProperty1<0:0,0:4>;kotlin.reflect.KProperty1<0:0,0:5>){0§<1:0>;1§<kotlin.Any?>;2§<kotlin.Any?>;3§<kotlin.Any?>;4§<kotlin.Any?>;5§<kotlin.Any?>}[0]
    final inline fun <#A1: reified #A!!, #B1: kotlin/Any?, #C1: kotlin/Any?, #D1: kotlin/Any?, #E1: kotlin/Any?> (kotlin.reflect/KClass<#A1>).of(kotlin.reflect/KProperty1<#A1, #B1>, kotlin.reflect/KProperty1<#A1, #C1>, kotlin.reflect/KProperty1<#A1, #D1>, kotlin.reflect/KProperty1<#A1, #E1>): kotlin.reflect/KProperty1<#A, arrow.core/Tuple4<#B1, #C1, #D1, #E1>> // arrow.match/MatchScope.of|of@kotlin.reflect.KClass<0:0>(kotlin.reflect.KProperty1<0:0,0:1>;kotlin.reflect.KProperty1<0:0,0:2>;kotlin.reflect.KProperty1<0:0,0:3>;kotlin.reflect.KProperty1<0:0,0:4>){0§<1:0>;1§<kotlin.Any?>;2§<kotlin.Any?>;3§<kotlin.Any?>;4§<kotlin.Any?>}[0]
    final inline fun <#A1: reified #A!!, #B1: kotlin/Any?, #C1: kotlin/Any?, #D1: kotlin/Any?> (kotlin.reflect/KClass<#A1>).of(kotlin.reflect/KProperty1<#A1, #B1>, kotlin.reflect/KProperty1<#A1, #C1>, kotlin.reflect/KProperty1<#A1, #D1>): kotlin.reflect/KProperty1<#A, kotlin/Triple<#B1, #C1, #D1>> // arrow.match/MatchScope.of|of@kotlin.reflect.KClass<0:0>(kotlin.reflect.KProperty1<0:0,0:1>;kotlin.reflect.KProperty1<0:0,0:2>;kotlin.reflect.KProperty1<0:0,0:3>){0§<1:0>;1§<kotlin.Any?>;2§<kotlin.Any?>;3§<kotlin.Any?>}[0]
    final inline fun <#A1: reified #A!!, #B1: kotlin/Any?, #C1: kotlin/Any?> (kotlin.reflect/KClass<#A1>).of(kotlin.reflect/KProperty1<#A1, #B1>, kotlin.reflect/KProperty1<#A1, #C1>): kotlin.reflect/KProperty1<#A, kotlin/Pair<#B1, #C1>> // arrow.match/MatchScope.of|of@kotlin.reflect.KClass<0:0>(kotlin.reflect.KProperty1<0:0,0:1>;kotlin.reflect.KProperty1<0:0,0:2>){0§<1:0>;1§<kotlin.Any?>;2§<kotlin.Any?>}[0]
    final inline fun <#A1: reified #A!!, #B1: kotlin/Any?> (kotlin.reflect/KClass<#A1>).of(kotlin.reflect/KProperty1<#A1, #B1>): kotlin.reflect/KProperty1<#A, #B1> // arrow.match/MatchScope.of|of@kotlin.reflect.KClass<0:0>(kotlin.reflect.KProperty1<0:0,0:1>){0§<1:0>;1§<kotlin.Any?>}[0]
}

final class arrow.match/DoesNotMatch : kotlin/Throwable { // arrow.match/DoesNotMatch|null[0]
    constructor <init>() // arrow.match/DoesNotMatch.<init>|<init>(){}[0]
}

final class arrow.match/MatchNotFound : kotlin/Throwable { // arrow.match/MatchNotFound|null[0]
    constructor <init>(kotlin/Any?) // arrow.match/MatchNotFound.<init>|<init>(kotlin.Any?){}[0]

    final val value // arrow.match/MatchNotFound.value|{}value[0]
        final fun <get-value>(): kotlin/Any? // arrow.match/MatchNotFound.value.<get-value>|<get-value>(){}[0]
}

final val arrow.match/isNotEmpty // arrow.match/isNotEmpty|@kotlin.reflect.KProperty1<0:0,kotlin.collections.Collection<0:1>>{0§<kotlin.Any?>;1§<kotlin.Any?>}isNotEmpty[0]
    final fun <#A1: kotlin/Any?, #B1: kotlin/Any?> (kotlin.reflect/KProperty1<#A1, kotlin.collections/Collection<#B1>>).<get-isNotEmpty>(): kotlin.reflect/KProperty1<#A1, kotlin.collections/Collection<#B1>> // arrow.match/isNotEmpty.<get-isNotEmpty>|<get-isNotEmpty>@kotlin.reflect.KProperty1<0:0,kotlin.collections.Collection<0:1>>(){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]

final fun <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?, #D: kotlin/Any?, #E: kotlin/Any?, #F: kotlin/Any?, #G: kotlin/Any?> (kotlin.reflect/KProperty1<#A, #B>).arrow.match/of(kotlin.reflect/KProperty1<#B, #C>, kotlin.reflect/KProperty1<#B, #D>, kotlin.reflect/KProperty1<#B, #E>, kotlin.reflect/KProperty1<#B, #F>, kotlin.reflect/KProperty1<#B, #G>): kotlin.reflect/KProperty1<#A, arrow.core/Tuple5<#C, #D, #E, #F, #G>> // arrow.match/of|of@kotlin.reflect.KProperty1<0:0,0:1>(kotlin.reflect.KProperty1<0:1,0:2>;kotlin.reflect.KProperty1<0:1,0:3>;kotlin.reflect.KProperty1<0:1,0:4>;kotlin.reflect.KProperty1<0:1,0:5>;kotlin.reflect.KProperty1<0:1,0:6>){0§<kotlin.Any?>;1§<kotlin.Any?>;2§<kotlin.Any?>;3§<kotlin.Any?>;4§<kotlin.Any?>;5§<kotlin.Any?>;6§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?, #D: kotlin/Any?, #E: kotlin/Any?, #F: kotlin/Any?> (kotlin.reflect/KProperty1<#A, #B>).arrow.match/of(kotlin.reflect/KProperty1<#B, #C>, kotlin.reflect/KProperty1<#B, #D>, kotlin.reflect/KProperty1<#B, #E>, kotlin.reflect/KProperty1<#B, #F>): kotlin.reflect/KProperty1<#A, arrow.core/Tuple4<#C, #D, #E, #F>> // arrow.match/of|of@kotlin.reflect.KProperty1<0:0,0:1>(kotlin.reflect.KProperty1<0:1,0:2>;kotlin.reflect.KProperty1<0:1,0:3>;kotlin.reflect.KProperty1<0:1,0:4>;kotlin.reflect.KProperty1<0:1,0:5>){0§<kotlin.Any?>;1§<kotlin.Any?>;2§<kotlin.Any?>;3§<kotlin.Any?>;4§<kotlin.Any?>;5§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?, #D: kotlin/Any?, #E: kotlin/Any?> (kotlin.reflect/KProperty1<#A, #B>).arrow.match/of(kotlin.reflect/KProperty1<#B, #C>, kotlin.reflect/KProperty1<#B, #D>, kotlin.reflect/KProperty1<#B, #E>): kotlin.reflect/KProperty1<#A, kotlin/Triple<#C, #D, #E>> // arrow.match/of|of@kotlin.reflect.KProperty1<0:0,0:1>(kotlin.reflect.KProperty1<0:1,0:2>;kotlin.reflect.KProperty1<0:1,0:3>;kotlin.reflect.KProperty1<0:1,0:4>){0§<kotlin.Any?>;1§<kotlin.Any?>;2§<kotlin.Any?>;3§<kotlin.Any?>;4§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?, #D: kotlin/Any?> (kotlin.reflect/KProperty1<#A, #B>).arrow.match/of(kotlin.reflect/KProperty1<#B, #C>, kotlin.reflect/KProperty1<#B, #D>): kotlin.reflect/KProperty1<#A, kotlin/Pair<#C, #D>> // arrow.match/of|of@kotlin.reflect.KProperty1<0:0,0:1>(kotlin.reflect.KProperty1<0:1,0:2>;kotlin.reflect.KProperty1<0:1,0:3>){0§<kotlin.Any?>;1§<kotlin.Any?>;2§<kotlin.Any?>;3§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?> (arrow.core.raise/SingletonRaise<#C>).arrow.match/matchOrRaise(#A, kotlin/Function1<arrow.match/MatchScope<#A, #B>, kotlin/Unit>): #B // arrow.match/matchOrRaise|matchOrRaise@arrow.core.raise.SingletonRaise<0:2>(0:0;kotlin.Function1<arrow.match.MatchScope<0:0,0:1>,kotlin.Unit>){0§<kotlin.Any?>;1§<kotlin.Any?>;2§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?> (kotlin.reflect/KProperty1<#A, #B>).arrow.match/of(kotlin.reflect/KProperty1<#B, #C>): kotlin.reflect/KProperty1<#A, #C> // arrow.match/of|of@kotlin.reflect.KProperty1<0:0,0:1>(kotlin.reflect.KProperty1<0:1,0:2>){0§<kotlin.Any?>;1§<kotlin.Any?>;2§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?> (#A).arrow.match/matchOrElse(kotlin/Function0<#B>, kotlin/Function1<arrow.match/MatchScope<#A, #B>, kotlin/Unit>): #B // arrow.match/matchOrElse|matchOrElse@0:0(kotlin.Function0<0:1>;kotlin.Function1<arrow.match.MatchScope<0:0,0:1>,kotlin.Unit>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?> (#A).arrow.match/matchOrThrow(kotlin/Function0<kotlin/Throwable> = ..., kotlin/Function1<arrow.match/MatchScope<#A, #B>, kotlin/Unit>): #B // arrow.match/matchOrThrow|matchOrThrow@0:0(kotlin.Function0<kotlin.Throwable>;kotlin.Function1<arrow.match.MatchScope<0:0,0:1>,kotlin.Unit>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?> (arrow.core.raise/Raise<arrow.match/MatchNotFound>).arrow.match/matchOrRaise(#A, kotlin/Function1<arrow.match/MatchScope<#A, #B>, kotlin/Unit>): #B // arrow.match/matchOrRaise|matchOrRaise@arrow.core.raise.Raise<arrow.match.MatchNotFound>(0:0;kotlin.Function1<arrow.match.MatchScope<0:0,0:1>,kotlin.Unit>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?> (kotlin.reflect/KProperty1<#A, #B>).arrow.match/takeIf(kotlin/String? = ..., kotlin/Function1<#B, kotlin/Boolean>): kotlin.reflect/KProperty1<#A, #B> // arrow.match/takeIf|takeIf@kotlin.reflect.KProperty1<0:0,0:1>(kotlin.String?;kotlin.Function1<0:1,kotlin.Boolean>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?> arrow.match/Matcher(kotlin/String, kotlin/Function1<#A, #B>): kotlin.reflect/KProperty1<#A, #B> // arrow.match/Matcher|Matcher(kotlin.String;kotlin.Function1<0:0,0:1>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (#A).arrow.match/matchUnit(kotlin/Function1<arrow.match/MatchScope<#A, kotlin/Unit>, kotlin/Unit>) // arrow.match/matchUnit|matchUnit@0:0(kotlin.Function1<arrow.match.MatchScope<0:0,kotlin.Unit>,kotlin.Unit>){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> arrow.match/identity(): kotlin.reflect/KProperty1<#A, #A> // arrow.match/identity|identity(){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?, #B: reified #A> arrow.match/instanceOf(): kotlin.reflect/KProperty1<#A, #B> // arrow.match/instanceOf|instanceOf(){0§<kotlin.Any?>;1§<0:0>}[0]
