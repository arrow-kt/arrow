// This file was automatically generated from Optional.kt by Knit tool. Do not edit.
package arrow.optics.examples.exampleOptional01

import arrow.core.None
import arrow.core.Option
import arrow.core.Some
import arrow.optics.Optional

data class User(val username: String, val email: Option<String>) {
    companion object {
      // can be out generated by @optics
      val email: Optional<User, String> = Optional(User::email) { user, email ->
        user.copy(email = Some(email))
      }
  }
}

fun main(args: Array<String>) {
  val original = User("arrow-user", None)
  val set = User.email.set(original, "arRoW-UsEr@arrow-Kt.IO")
  val modified = User.email.modify(set, String::toLowerCase)
  println("original: $original, set: $set, modified: $modified")
}
